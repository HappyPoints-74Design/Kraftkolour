{% comment %}
  /**
   * @param {object} product - product object
   * @param {string} [classes] - additional classes to add to the grid item
   * @param {boolean} [no_actions] - whether to show the quick add and quick shop buttons
   * @param {boolean} quick_add_enable - whether quick add is enabled
   * @param {boolean} quick_shop_enable - whether quick shop is enabled
   * @param {string} [type] - whether the grid item is horizontal or not
   * @param {string} product_grid_image_size - the image size to use for the grid item
   * @param {string} [image_style] - whether the image is square or circle
   * @param {object} collection - the collection object
   * @param {boolean} product_grid_image_fill - whether the image should fill the grid item
   * @param {string} [sizes] - image sizes
   * @param {string} [sizeVariable] - image size variable used in image size calculations
   * @param {string} [fallback] - fallback used in image size calculations when first condition is not met
   * @param {boolean} product_hover_image - whether second image will be shown on hover
   * @param {boolean} enable_swatches - whether swatches are enabled
   * @param {boolean} vendor_enable - whether to show the vendor
   * @param {boolean} product_save_amount - show save amount
   * @param {string} product_save_type - dollar or percent
   * @param {string} [hydration] - hydration mode - (default: 'on:idle')
   * @param {boolean} set_image_breathing_room - whether to set image breathing room
   * @param {boolean} enable_tags - whether to show tags
   */
{% endcomment %}

{%- liquid
  assign hydration = hydration | default: 'on:idle'
  assign on_sale = false
  if product.compare_at_price > product.price
    assign on_sale = true
  endif

  if set_image_breathing_room
    if settings.product_grid_image_margin == 0
      assign image_breathing_room = false
    else
      assign image_breathing_room = true
    endif
  endif

  assign product_tags = product.tags | join: ','
  assign has_custom_label = false
  assign custom_labels = ''
  if product.metafields.theme.label and product.metafields.theme.label != blank
    assign has_custom_label = true
    assign custom_labels = product.metafields.theme.label.value
  elsif product_tags contains '_label_'
    for tag in product.tags
      if tag contains '_label_'
        assign tag_starts_with = tag | slice: 0
        if tag_starts_with == '_'
          assign has_custom_label = true
          assign custom_label = tag | replace: '_label_', ''
          assign custom_labels = custom_labels | append: custom_label | append: ','
        endif
      endif
    endfor
  endif
-%}

<is-land
  class="card-product 
    {{ classes }} grid-product-image-breathing-room--{{ image_breathing_room }}
    product-tile-layout--{{ product_tile_layout }}
    {% if product_grid_style contains 'gridlines' %}
      grid-product--gridlines overlay
    {% endif %}
  "
  {{ hydration }}
>
  <product-grid-item
    class="product-grid-item"
    data-product-handle="{{ product.handle }}" data-product-id="{{ product.id }}"
    data-product-grid-item
  >
    <div class="grid-item__content">

      {%- liquid
        assign imageRatio = product_grid_image_size
        assign fixed_aspect_ratio = false
        unless imageRatio == 'natural'
          assign fixed_aspect_ratio = true
        endunless

        if image_style == 'circle'
          assign fixed_aspect_ratio = true
          assign imageRatio = 'square'
        endif

        assign preview_image = product.featured_media.preview_image
      -%}

      <div class="grid-item__link">
        <a href="{{ product.url  }}" class="grid-product__image-wrap">
          <div class="grid-product__tags">
            {%- if has_custom_label -%}
              {%- assign labels = custom_labels | split: ',' -%}
              {%- for label in labels -%}
                <div class="grid-product__tag grid-product__tag--custom">
                  {{ label }}
                </div>
              {%- endfor -%}
            {%- endif -%}

            {%- unless product.available -%}
              <div class="grid-product__tag grid-product__tag--sold-out">
                {{ 'info.sold_out' | t }}
              </div>
            {%- endunless -%}
            {%- if on_sale and product.available -%}
              <div class="grid-product__tag grid-product__tag--sale">
                {{ 'labels.sale' | t }}
              </div>
            {%- endif -%}
          </div>

          {%- if fixed_aspect_ratio -%}
            <div
              class="grid__image-ratio grid__image-ratio--{% if image_style == 'circle' %}square{% else %}{{ product_grid_image_size }}{% endif %}">
              {%- capture image_classes -%}
                {% unless product_grid_image_fill %} grid__image-contain{% endunless %} image-style--{{ image_style }}
              {%- endcapture -%}
              {%- if preview_image != blank -%}
                {%- render 'image-element',
                  img: preview_image,
                  classes: image_classes,
                  sizes: sizes,
                  sizeVariable: sizeVariable,
                  fallback: fallback,
                  widths: '160, 200, 280, 360, 540, 720, 900',
                -%}
              {%- else -%}
                {%- capture placeholder -%}product-{% cycle 1, 2, 3, 4, 5, 6 %}{%- endcapture -%}
                <div class="product-image--placeholder">{{ placeholder | placeholder_svg_tag: 'placeholder-svg' }}</div>
              {%- endif -%}
            </div>
          {%- else -%}
            {%- liquid
              assign ratio = 1
              if preview_image != blank
                assign ratio = preview_image.aspect_ratio
              endif
            -%}
            <div {% if preview_image != blank %}style="height: 0; padding-bottom: {{ 100 | divided_by: ratio }}%;"{% endif %}>
              {%- if preview_image != blank -%}
                {%- render 'image-element',
                  img: preview_image,
                  classes: 'grid-product__image',
                  sizes: sizes,
                  sizeVariable: sizeVariable,
                  fallback: fallback,
                  widths: '360, 540, 720, 900, 1080',
                -%}
              {%- else -%}
                {%- capture placeholder -%}product-{% cycle 1, 2, 3, 4, 5, 6 %}{%- endcapture -%}
                <div class="product-image--placeholder">{{ placeholder | placeholder_svg_tag: 'placeholder-svg' }}</div>
              {%- endif -%}
            </div>
          {%- endif -%}

          {%- if product_hover_image and product.media.size > 1 -%}
            {%- for media in product.media offset: 1 limit: 1 -%}
              {%- assign second_image = media.preview_image -%}
            {%- endfor -%}
            <div class="grid-product__secondary-image small--hide">
              {%- capture secondary_image_classes -%}
                image-style--{{ image_style }}
              {%- endcapture -%}
              {%- render 'image-element',
                img: second_image,
                classes: secondary_image_classes,
                sizes: sizes,
                sizeVariable: sizeVariable,
                fallback: fallback,
                widths: '360, 540, 720, 1000',
              -%}
            </div>
          {%- endif -%}

          {% comment %} {%- if enable_swatches -%}
            {%- assign swatch_trigger = 'trigger.color_swatch' | t | downcase -%}
            {%- for option in product.options_with_values -%}
              {%- liquid
                assign option_name = option.name | downcase
                assign is_color = false
                if option_name contains swatch_trigger
                  assign is_color = true
                elsif swatch_trigger == 'color' and option_name contains 'colour'
                  assign is_color = true
                endif
              -%}
              {%- if is_color -%}
                {%- assign option_index = forloop.index0 -%}
                {%- assign values = '' -%}
                {%- for variant in product.variants -%}
                  {%- assign value = variant.options[option_index] %}
                  {%- unless values contains value -%}
                    {%- assign values = values | join: ',' | append: ',' | append: value | split: ',' -%}

                    {%- if variant.image -%}
                      <div
                        class="grid-product__color-image grid-product__color-image--{{ variant.id }}">
                      </div>
                    {%- endif -%}
                  {%- endunless -%}
                {%- endfor -%}
              {%- endif -%}
            {%- endfor -%}
          {%- endif -%} {% endcomment %}
        </a>

        <div class="grid-item__meta">
          <div class="grid-item__meta-main">
            {% comment %} {%- if enable_swatches and type == blank -%}
              {%- render 'swatches', product: product -%}
            {%- endif -%} {% endcomment %}

            <a href="{{ product.url  }}" class="grid-product__title">{{ product.title }}</a>
              {%- if vendor_enable -%}
                <div class="grid-product__vendor">{{ product.vendor }}</div>
              {%- endif -%}
            </div>
            <div class="grid-item__meta-secondary">
              <div class="grid-product__price">
                {%- if on_sale -%}
                  <span class="visually-hidden">{{ 'labels.regular_price' | t }}</span>
                  <span class="grid-product__price--original">
                    {%- render 'price',
                      price: product.compare_at_price,
                      shop: shop,
                      superscript_decimals: superscript_decimals,
                    -%}
                  </span>

                  {%- if product_save_amount -%}
                    {%- if product_save_type == 'dollar' -%}
                      {%- capture saved_amount -%}{{ product.compare_at_price | minus: product.price | money_without_trailing_zeros }}{%- endcapture -%}
                    {%- else -%}
                      {%- capture saved_amount -%}{{ product.compare_at_price | minus: product.price | times: 100.0 | divided_by: product.compare_at_price | round }}%{%- endcapture -%}
                    {%- endif -%}
                    <span class="grid-product__price--savings">
                      {{ 'info.save_amount' | t: saved_amount: saved_amount }}
                    </span>
                  {%- endif -%}
                {%- endif -%}

                {%- if product.price_varies -%}
                  <span class="grid-product__price--current">
                    {%- render 'price-varies',
                      price: product.price_min,
                      shop: shop,
                      superscript_decimals: superscript_decimals,
                    -%}
                  </span>
                {%- else -%}
                  {%- if on_sale -%}
                    <span class="visually-hidden">{{ 'labels.sale_price' | t }}</span>
                  {%- endif -%}
                  <span class="grid-product__price--current">
                    {%- render 'price',
                      price: product.price,
                      shop: shop,
                      superscript_decimals: superscript_decimals,
                    -%}
                  </span>
                {%- endif -%}

                {%- assign product_variant = product.selected_or_first_available_variant -%}
                {%- if product_variant.unit_price_measurement -%}
                  <div class="product__unit-price">
                    {%- capture unit_price_base_unit -%}
                      {%- if product_variant.unit_price_measurement -%}
                        {%- if product_variant.unit_price_measurement.reference_value != 1 -%}
                          {{ product_variant.unit_price_measurement.reference_value }}
                        {%- endif -%}
                        {{ product_variant.unit_price_measurement.reference_unit }}
                      {%- endif -%}
                    {%- endcapture -%}

                    {{ product_variant.unit_price | money }}/{{ unit_price_base_unit }}
                  </div>
                {%- endif -%}
              </div>
            </div>
            
            {%- if enable_swatches and type == 'horizontal' -%}
              {%- render 'swatches', product: product -%}
            {%- endif -%}

            <div class="grid-item__meta-button">
              <a href="{{ product.url  }}" class="btn btn--blue btn--full">
                Choose options
              </a>
              {% comment %} {% if product.available %}
                {% if product.variants.size > 1 %}
                  <a href="{{ product.url | within: collection }}" class="btn btn--blue btn--full">
                    Choose options
                  </a>
                {% else %}
                  <form method="post" action="/cart/add">
                    <input type="hidden" name="id" value="{{ product.variants.first.id }}" />
                    <input min="1" type="hidden" id="quantity" name="quantity" value="1"/>
                    <input type="submit" value="Add to cart" class="btn btn--blue btn--full btn-add-to-cart"/>
                  </form>
                {% endif %}
              {% else %}
                <a href="{{ product.url | within: collection }}" class="btn btn--blue btn--full">
                  Sold out
                </a>
              {% endif %}
               {% endcomment %}
            </div>
        </div>
      </div>

      {%- if enable_product_tags -%}
        {% render 'product-tags', product: product %}
      {%- endif -%}
    </div>
  </product-grid-item>

  <template data-island>
    <script type="module">
      import 'components/product-grid-item';
    </script>
  </template>
</is-land>
