<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}" dir="{{ settings.text_direction }}">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="theme-color" content="{{ settings.color_button }}">
  <link rel="canonical" href="{{ canonical_url }}">
  <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
  <link rel="dns-prefetch" href="https://ajax.googleapis.com">
  <link rel="dns-prefetch" href="https://maps.googleapis.com">
  <link rel="dns-prefetch" href="https://maps.gstatic.com">

  {%- if settings.favicon != blank -%}
    <link rel="shortcut icon" href="{{ settings.favicon | img_url: '32x32' }}" type="image/png" />
  {%- endif -%}

  {%- render 'seo-title' -%}

  {%- if page_description -%}
  <meta name="description" content="{{ page_description | escape }}">
  {%- endif -%}

  {%- render 'social-meta-tags' -%}

  {%- render 'font-face' -%}
  {{ 'components.css' | asset_url | stylesheet_tag: preload: true }}
  {%- render 'css-variables' -%}
  {{ 'overrides.css' | asset_url | stylesheet_tag }}
  {{ 'customize.css' | asset_url | stylesheet_tag }}
  {{ 'theme_custom.css' | asset_url | stylesheet_tag }}
  {%- style -%}

  :root {
    --productGridPadding: 12px;
  }

  {%- endstyle -%}

  {%- liquid
    assign enableSuperScript = false
    unless shop.money_format contains 'money' or shop.money_format contains '.'
      if settings.superscript_decimals
        if shop.money_format contains '{{amount}}' or shop.money_format contains '{{ amount }}'
          assign enableSuperScript = true
        elsif shop.money_format contains '{{amount_with_comma_separator}}' or shop.money_format contains '{{ amount_with_comma_separator }}'
          assign enableSuperScript = true
        endif
      endif
    endunless
  -%}

  <script>
    document.documentElement.className = document.documentElement.className.replace('no-js', 'js');

    if (!window.location.pathname.includes("apps/customer-portal")) {
      window.theme = window.theme || {};
    }
    
    theme.routes = {
      home: "{{ routes.root_url }}",
      collections: "{{ routes.collections_url }}",
      cart: "{{ routes.cart_url | append: '.js' }}",
      cartPage: "{{ routes.cart_url }}",
      cartAdd: "{{ routes.cart_add_url | append: '.js' }}",
      cartChange: "{{ routes.cart_change_url | append: '.js' }}",
      search: "{{ routes.search_url }}",
      predictiveSearch: "{{ routes.predictive_search_url }}"
    };

    theme.strings = {
      soldOut: {{ 'info.sold_out' | t | json }},
      unavailable: {{ 'info.unavailable' | t | json }},
      inStockLabel: {{ 'info.in_stock' | t | json }},
      oneStockLabel: {{ 'info.low_stock_count.one' | t: count: '[count]' | json }},
      otherStockLabel: {{ 'info.low_stock_count.other' | t: count: '[count]' | json }},
      willNotShipUntil: {{ 'info.ready_to_ship_on' | t: date: '[date]' | json }},
      willBeInStockAfter: {{ 'info.back_in_stock_on' | t: date: '[date]' | json }},
      waitingForStock: {{ 'info.backordered' | t | json }},
      savePrice: {{ 'info.save_amount' | t: saved_amount: '[saved_amount]' | json }},
      cartEmpty: {{ 'info.cart_empty' | t | json }},
      cartTermsConfirmation: {{ 'info.you_must_agree' | t | json }},
      searchCollections: {{ 'labels.collections' | t | json }},
      searchPages: {{ 'labels.pages' | t | json }},
      searchArticles: {{ 'labels.articles' | t | json }},
      maxQuantity: {{ 'info.cart_max_quantity' | t: quantity: '[quantity]', title: '[title]' | json }}
    };

    theme.settings = {
      cartType: {{ settings.cart_type | json }},
      isCustomerTemplate: {% if request.page_type contains 'customers/' %}true{% else %}false{% endif %},
      moneyFormat: {{ shop.money_format | json }},
      saveType: {{ settings.product_save_type | json }},
      productImageSize: {{ settings.product_grid_image_size | json }},
      productImageCover: {{ settings.product_grid_image_fill }},
      predictiveSearch: {{ settings.predictive_search_enabled }},
      predictiveSearchType: {{ settings.search_type | json }},
      superScriptSetting: {{ settings.superscript_decimals }},
      superScriptPrice: {{ enableSuperScript }},
      quickView: {{ settings.quick_shop_enable }},
      quickAdd: {{ settings.quick_add_enable }},
      themeName: 'Expanse',
      themeVersion: "5.1.0"
    };
  </script>

  {%- render 'import-map' -%}
  {%- render 'es-module-shims' -%}
  {%- render 'is-land' -%}
  {%- render 'preload-js' -%}

  {{ content_for_header }}
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"/>
  <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
  <script src="{{ 'theme.js' | asset_url }}" defer="defer"></script>

  {%- if request.page_type contains 'customers/' -%}
    <script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer="defer"></script>
  {%- endif -%}

  {% if request.design_mode %}
    <script src="https://api.archetypethemes.co/design-mode.js" defer="defer"></script>
  {% endif %}

  <script src="{{ 'bss-po-custom-atc.js' | asset_url }}" defer></script>

  <script>
    document.addEventListener("DOMContentLoaded", function() {
      if (window.location.pathname.includes("apps/customer-portal")) {
        var style = document.createElement('style');
        style.innerHTML = `
          @media screen and (min-width: 1400px) {
              .site-navigation--below {
                  flex-wrap: nowrap !important;
              }
          }
          ul.bss-nt-cart-item-properties {
              margin: 0 !important;
          }
          .bss-nt-cart-item-properties li:not(:first-child) {
              display: none !important;
          }
        `;
        document.head.appendChild(style);
      }
    });
  </script>

  <meta name="google-site-verification" content="h5Of-FphnrZ1ID_VbdCB53xdu56DuplwBu2jOhkTXFQ" />

  <!-- Flodesk universal script -->
  <script>
    (function(w, d, t, h, s, n) {
      w.FlodeskObject = n;
      var fn = function() {
        (w[n].q = w[n].q || []).push(arguments);
      };
      w[n] = w[n] || fn;
      var f = d.getElementsByTagName(t)[0];
      var v = '?v=' + Math.floor(new Date().getTime() / (120 * 1000)) * 60;
      var sm = d.createElement(t);
      sm.async = true;
      sm.type = 'module';
      sm.src = h + s + '.mjs' + v;
      f.parentNode.insertBefore(sm, f);
      var sn = d.createElement(t);
      sn.async = true;
      sn.noModule = true;
      sn.src = h + s + '.js' + v;
      f.parentNode.insertBefore(sn, f);
    })(window, document, 'script', 'https://assets.flodesk.com', '/universal', 'fd');
  </script>

  <!-- BSS Custom -->
    <style>
      .bss-theme-hidden {
        display: none !important;
        cursor: not-allowed;
      }

      .bss-loading-btn {
        background: transparent;
        width: 100%;
        height: 46px;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        border-radius: 4px;
      }

      .bss-loading-btn::after {
        content: "";
        position: absolute;
        width: 16px;
        height: 16px;
        border: 2px solid #333;
        border-top-color: transparent;
        border-radius: 50%;
        animation: spin 0.6s linear infinite;
      }
      
      @keyframes spin {
			  to { transform: rotate(360deg); }
			}
    </style>
    <!-- End BSS Custom -->
</head>

<body class="template-{{ template | replace: '.', ' ' | truncatewords: 1, '' | handle }}{% if request.path == '/challenge' %} template-challange{% endif %}" data-button_style="{{ settings.button_style }}" data-edges="{{ settings.roundness }}" data-type_header_capitalize="{{ settings.type_header_capitalize }}" data-swatch_style="{{ settings.swatch_style }}" data-grid-style="{{ settings.product_grid_style }}">

  <a class="in-page-link visually-hidden skip-link" href="#MainContent">{{ 'actions.skip_to_content' | t }}</a>

  <div id="PageContainer" class="page-container">
    <div class="transition-body">
      {%- sections 'header-group' -%}
      {%- sections 'popup-group' -%}

      <main class="main-content" id="MainContent">
        {{ content_for_layout }}
      </main>

      {%- sections 'footer-group' -%}
    </div>
  </div>

  {%- liquid
    render 'video-modal'
    render 'photoswipe-template'
    render 'tool-tip'
  -%}
<!-- BSS Custom script -->
    <script>
      function hideBtns(selectors) {
        const buttons = document.querySelectorAll(selectors);
        if(buttons.length) {
          buttons.forEach(btn => {
            if(!btn.classList.contains('bss-theme-hidden')) {
		          btn.classList.add('bss-theme-hidden');
		          btn.setAttribute("disabled", true)
		        }
      
            // add loading
            if(!btn.parentNode.querySelector('.bss-loading-btn')) {
              const loadingBtn = document.createElement('div');
              loadingBtn.classList.add("bss-loading-btn");
              loadingBtn.innerHTML = `<div class="bss-loader"> </div>`;
      
              btn.insertAdjacentElement('afterend', loadingBtn)
            }
          })
        }
      }
      function showBtns(selectors) {
        const buttons = document.querySelectorAll(selectors);
        if(buttons.length) {
          buttons.forEach(btn => {
            btn.classList.remove('bss-theme-hidden');
            btn.removeAttribute("disabled")
      
            const loadingBtn = btn.parentNode.querySelector('.bss-loading-btn');
            if(loadingBtn) loadingBtn.remove();
          })
        }
      }
      
      function findAndHideButtons(selectors, findInterval) {
        hideBtns(selectors);
        
        findInterval.findATCAndHide = setInterval(() => {
          const buttons = document.querySelectorAll(selectors);
          if(buttons.length) {
            hideBtns(selectors);
            clearInterval(findInterval.findATCAndHide);
          }
        }, 100);
      
        setTimeout(() => {
          clearInterval(findInterval.findATCAndHide);
        }, 5000)
      }
      
      function showBtnAfterBssLoad(bssSelectors, themeSelectors, findInterval, isNewAddOnCheckout) {
        findInterval.findBssATC = setInterval(() => {
          const buttons = document.querySelectorAll(bssSelectors);
          if(buttons.length || isNewAddOnCheckout) {
            console.log("found bss button")
            showBtns(themeSelectors);
            clearInterval(findInterval.findBssATC);
          }
        }, 100);
      
        setTimeout(() => {
          clearInterval(findInterval.findBssATC);
        }, 5000)
      }
      
      const findInterval = {
        findATCAndHide: null,
        findBssATC: null
        // findCheckOutAndHide: null
      };
      const bssATC = '[po-btn-atc="true"]';
      const themeATC = '.product-single__form';
     
      function backToOriginal(themeCheckout='', themeATC='') {
        try {
          showBtns(themeATC);
              
          clearInterval(findInterval.findATCAndHide);
          clearInterval(findInterval.findBssATC);
        } catch (error) {
          console.error("BSS back to default of theme", error);
        }
      }
      
      function main() {
        try {
          if(window.location.pathname.includes('/products')) {
            findAndHideButtons(themeATC, findInterval);
            showBtnAfterBssLoad(bssATC, themeATC, findInterval)
          }
      
          window.addEventListener('load', function() {
            console.log("page is fully loaded")
            setTimeout(() => {
              backToOriginal('', themeATC);
            }, 3000)
          });
        } catch (error) {
          console.error("BSS Custom Error", error);
          backToOriginal('', themeATC);
        }
      }
      main();
    </script>
    <!-- End BSS Custom script -->
</body>
</html>
